
@model NIDO_TimeAttandance_MVC.Areas.Payroll.Models.IncomeTaxModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}


<div class="login-form-area mg-t-30 mg-b-15">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-3"></div>
            @using (Ajax.BeginForm("Update", "IncomeTax", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBeginAjax", OnFailure = "OnFailureAjax", OnSuccess = "OnSuccessAjax" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IncomeTaxId)
                <div class="col-lg-12">
                    <div class="login-bg">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="login-title">
                                    <h1>Update IncomeTax</h1>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Salary Start</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @Html.TextBoxFor(model => model.SalaryStartSlab, new { placeholder = "Please Enter Start Salary", required = "" })


                                        @Html.ValidationMessageFor(model => model.SalaryStartSlab, "", new { @class = "text-danger" })
                                        <i class="fa fa-user login-user" aria-hidden="true"></i>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Salary End</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @Html.TextBoxFor(model => model.SalaryEndSlab, new { placeholder = "Please Enter End Salary", required = "" })


                                        @Html.ValidationMessageFor(model => model.SalaryEndSlab, "", new { @class = "text-danger" })
                                        <i class="fa fa-user login-user" aria-hidden="true"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Percentage</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @*<input type="number" name="Percentage" class="form-control" required value="" />*@
                                        @Html.TextBoxFor(model => model.Percentage, new { placeholder = "Please Enter Value",required = "", })


                                        @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                                        <i class="fa fa-user login-user" aria-hidden="true"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Extra Tax Amount</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @Html.TextBoxFor(model => model.ExtraTaxAmount, new { placeholder = "Please Enter Value", required = "",  })


                                        @Html.ValidationMessageFor(model => model.ExtraTaxAmount, "", new { @class = "text-danger" })
                                        <i class="fa fa-user login-user" aria-hidden="true"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-8">
                                <div class="login-button-pro">
                                    <button type="submit" class="login-button login-button-lg">Update Income Tax</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="col-lg-3"></div>
        </div>
    </div>
</div>

<script>


    $("[name=Percentage]").keypress(function (event) {
        return isNumber(event, this)
    });
    $("[name=ExtraTaxAmount]").keypress(function (event) {
        return isNumber(event, this)
    });

    function isNumber(evt, element) {

        var charCode = (evt.which) ? evt.which : event.keyCode

        if (
            (charCode != 45 || $(element).val().indexOf('-') != -1) &&      // “-” CHECK MINUS, AND ONLY ONE.
            (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
            (charCode < 48 || charCode > 57))
            return false;

        return true;
    }    

</script>