@model NIDO_TimeAttandance_MVC.Areas.Payroll.Models.SecurityDepositModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<div class="login-form-area mg-t-30 mg-b-15">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-3"></div>
            @using (Ajax.BeginForm("Update", "SecurityDeposit", new AjaxOptions { HttpMethod = "POST", OnBegin = "OnBeginAjax", OnFailure = "OnFailureAjax", OnSuccess = "OnSuccessAjax" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SecurityDepositId)
                <div class="col-lg-12">
                    <div class="login-bg">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="login-title">
                                    <h1>Update Security Deposit</h1>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Deposit Name</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @Html.TextBoxFor(model => model.SecurityDepositName, new { placeholder = "Please Enter Security Deposit Name", required = "" })

                                        @Html.ValidationMessageFor(model => model.SecurityDepositName, "", new { @class = "text-danger" })
                                        <i class="fa fa-user login-user" aria-hidden="true"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Value Type</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @Html.DropDownListFor(model => model.ValueTypeId, ViewBag.ValueType as IEnumerable<SelectListItem>, "Please select Value Type", new { @class = "form-control m-input", id = "ValueTypeId" })


                                        @Html.ValidationMessageFor(model => model.ValueTypeId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-2">
                                    <div class="login-input-head">
                                        <p>Deposit Value</p>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="login-input-area">
                                        @Html.TextBoxFor(model => model.SecurityDepositValue, new { placeholder = "Please Enter Value", required = "" })


                                        @Html.ValidationMessageFor(model => model.SecurityDepositValue, "", new { @class = "text-danger" })
                                        <i class="fa fa-user login-user" aria-hidden="true"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br>
                        <div class="input-daterange input-group" style="margin-left:22px;" id="datepicker">
                            <div class="input-daterange input-group">


                                @{
                                    var startDate = Model.StartDate.HasValue ? Model.StartDate.Value.ToString("yyyy-MM-dd") : "";
                                    var endDate = Model.EndDate.HasValue ? Model.EndDate.Value.ToString("yyyy-MM-dd") : "";
                                }





                                <span id="Date-label" class="input-group-addon">Select Date Range</span>
                                <span id="startDate-label" class="input-group-addon">From</span>
                               
                                <input type="date" class="form-control" id="startDate" value="@startDate" placeholder="Please select From Date" required name="StartDate" autocomplete="off" />
                              
                                <span id="endDate-label" class="input-group-addon">to</span>
                                <input type="date" class="form-control" id="endDate" value="@endDate" placeholder="Please select To Date" required name="EndDate" autocomplete="off" />

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-8">
                                <div class="login-button-pro">
                                    <button type="submit" class="login-button login-button-lg">Update Security Deposit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="col-lg-3"></div>
        </div>
    </div>
</div>
